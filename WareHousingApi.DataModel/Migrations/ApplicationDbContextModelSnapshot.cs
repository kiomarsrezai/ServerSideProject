// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WareHousingApi.DataModel;

#nullable disable

namespace WareHousingApi.DataModel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WareHousingApi.Entities.ApplicationRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles_Tbl", (string)null);
                });

            modelBuilder.Entity("WareHousingApi.Entities.ApplicationUsers", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MelliCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte>("UserType")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users_Tbl", (string)null);
                });

            modelBuilder.Entity("WareHousingApi.Entities.Countries_Tbl", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryID"));

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryID");

                    b.HasIndex("UserID");

                    b.ToTable("Countries_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.Customers_Tbl", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EconomicCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WareHouseID")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.HasIndex("UserID");

                    b.HasIndex("WareHouseID");

                    b.ToTable("Customers_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.InvoiceItems_Tbl", b =>
                {
                    b.Property<int>("InvoiceItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceItemID"));

                    b.Property<int>("CoverPrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("PurchasePrice")
                        .HasColumnType("int");

                    b.Property<int>("SalesPrice")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("InvoiceItemID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("InvoiceItems_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.Invoices_Tbl", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearID")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("InvoiceStatus")
                        .HasColumnType("tinyint");

                    b.Property<int>("InvoiceTotalPrice")
                        .HasColumnType("int");

                    b.Property<byte>("InvoiceType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ReturnInvoiceDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WareHouseID")
                        .HasColumnType("int");

                    b.HasKey("InvoiceID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("FiscalYearID");

                    b.HasIndex("UserID");

                    b.HasIndex("WareHouseID");

                    b.ToTable("Invoices_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaNameShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("OrganizationKind")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StructureId")
                        .HasColumnType("int");

                    b.Property<byte?>("ToGetherBudget")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("TblAreas");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("TblAudits");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveCivil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActiveCurrent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActiveFinancial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActiveRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("OrganizationKind")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TblAreaId")
                        .HasColumnType("int");

                    b.Property<int?>("TblYearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TblAreaId");

                    b.HasIndex("TblYearId");

                    b.ToTable("TblBudgets");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("Allocation")
                        .HasColumnType("bigint");

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int");

                    b.Property<long?>("MosavabPublic")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Show")
                        .HasColumnType("bit");

                    b.Property<int?>("TblCodingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("TblCodingId");

                    b.ToTable("TblBudgetDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailEdit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BudgetDetailId")
                        .HasColumnType("int");

                    b.Property<long?>("Decrease")
                        .HasColumnType("bigint");

                    b.Property<long?>("Increase")
                        .HasColumnType("bigint");

                    b.Property<byte?>("StatusId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("BudgetDetailId");

                    b.ToTable("TblBudgetDetailEdits");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BudgetDetailId")
                        .HasColumnType("int");

                    b.Property<long?>("EditProject")
                        .HasColumnType("bigint");

                    b.Property<long?>("Expense")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mosavab")
                        .HasColumnType("bigint");

                    b.Property<int?>("ProgramOperationDetailsId")
                        .HasColumnType("int");

                    b.Property<long?>("Supply")
                        .HasColumnType("bigint");

                    b.Property<long?>("Takhsis")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BudgetDetailId");

                    b.HasIndex("ProgramOperationDetailsId");

                    b.ToTable("TblBudgetDetailProjects");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailProjectArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("BudgetDetailProjectId")
                        .HasColumnType("int");

                    b.Property<long?>("EditArea")
                        .HasColumnType("bigint");

                    b.Property<long?>("Expense")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mosavab")
                        .HasColumnType("bigint");

                    b.Property<long?>("Supply")
                        .HasColumnType("bigint");

                    b.Property<long?>("Takhsis")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("BudgetDetailProjectId");

                    b.ToTable("TblBudgetDetailProjectAreas");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailProjectAreaDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BudgetDetailProjectAreaId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmenId")
                        .HasColumnType("int");

                    b.Property<long?>("MosavabDepartment")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BudgetDetailProjectAreaId");

                    b.ToTable("TblBudgetDetailProjectAreaDepartments");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailProjectAreaEdit12345678910", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BudgetDetailProjectAreaId")
                        .HasColumnType("int");

                    b.Property<long?>("Decrease")
                        .HasColumnType("bigint");

                    b.Property<int?>("EditStatusId")
                        .HasColumnType("int");

                    b.Property<long?>("Increase")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BudgetDetailProjectAreaId");

                    b.HasIndex("EditStatusId");

                    b.ToTable("TblBudgetDetailProjectAreaEdit12345678910s");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetPerformanceAccept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MonthId")
                        .HasColumnType("int");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("TblBudgetPerformanceAccepts");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetPerformanceAcceptDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("BudgetPerformanceAcceptId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("BudgetPerformanceAcceptId");

                    b.ToTable("TblBudgetPerformanceAcceptDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProcessName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblBudgetProcesses");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCoding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePbb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeVaset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeVasetTaminEtebarat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodingKindId")
                        .HasColumnType("int");

                    b.Property<int?>("CodingNatureId")
                        .HasColumnType("int");

                    b.Property<int?>("CodingPbbid")
                        .HasColumnType("int");

                    b.Property<bool?>("Crud")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LevelNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MotherId")
                        .HasColumnType("int");

                    b.Property<int?>("ProctorId")
                        .HasColumnType("int");

                    b.Property<bool?>("Show")
                        .HasColumnType("bit");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TblBudgetProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CodingKindId");

                    b.HasIndex("CodingNatureId");

                    b.HasIndex("CodingPbbid");

                    b.HasIndex("MotherId");

                    b.HasIndex("ProctorId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TblBudgetProcessId");

                    b.ToTable("TblCodings");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodingKindName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblCodingKinds");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingNature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodingNatureName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblCodingNatures");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingPbb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("LevelNumber")
                        .HasColumnType("tinyint");

                    b.Property<int?>("MotherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MotherId");

                    b.ToTable("TblCodingPbbs");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingSemak", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblCodingSemaks");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblCodingSubjects");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingsMapSazman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("CodeAcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeVasetShahrdari")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodingId")
                        .HasColumnType("int");

                    b.Property<byte?>("PercentBud")
                        .HasColumnType("tinyint");

                    b.Property<string>("TitleAcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.Property<int?>("YearName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CodingId");

                    b.ToTable("TblCodingsMapSazmen");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommiteKindId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommiteKindId");

                    b.HasIndex("YearId");

                    b.ToTable("TblCommites");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommiteId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<byte?>("Row")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CommiteId");

                    b.HasIndex("ProjectId");

                    b.ToTable("TblCommiteDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteDetailAccept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommiteDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAccept")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resposibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommiteDetailId");

                    b.ToTable("TblCommiteDetailAccepts");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteDetailEstimate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("CommiteDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Price")
                        .HasColumnType("bigint");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CommiteDetailId");

                    b.ToTable("TblCommiteDetailEstimates");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteDetailWb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommiteDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommiteDetailId");

                    b.ToTable("TblCommiteDetailWbs");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommiteName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblCommiteKinds");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Agreement46")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agreement48")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("DoingMethodId")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Final")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuppliersId")
                        .HasColumnType("int");

                    b.Property<long?>("Surplus")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZemanatBank")
                        .HasColumnType("int");

                    b.Property<string>("ZemanatDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZemanatEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZemanatModat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZemanatModatUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZemanatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ZemanatPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ZemanatShobe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZemanatType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SuppliersId");

                    b.ToTable("TblContracts");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblContractArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<long?>("ShareAmount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("ContractId");

                    b.ToTable("TblContractAreas");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblContractRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("RequestId");

                    b.ToTable("TblContractRequests");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCpdate", b =>
                {
                    b.Property<DateTime>("ChrisDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParsDate")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("TblCpdates");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCreaditor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreaditorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblCreaditors");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblDepartman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MotherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("MotherId");

                    b.ToTable("TblDepartmen");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblDepartmentAcceptor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("DepartmanId");

                    b.ToTable("TblDepartmentAcceptors");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblDepartmentAcceptorUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmanAcceptorId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resposibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmanAcceptorId");

                    b.ToTable("TblDepartmentAcceptorUsers");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblDoingMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblDoingMethods");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEditBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EditBudgetKindId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblEditBudgets");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEditBudgetKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EditKindName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEditBudgetKinds");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEditStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescriptionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEditStatuses");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeighborhoodId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RenovationCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEstates");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateCall", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.HasKey("Id");

                    b.ToTable("TblEstateCalls");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateDestruction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("TblEstateDestructions");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeMelli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Father")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectEstateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEstateOwners");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstatePayBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateAcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCheck")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberAcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberCheck")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectEstateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEstatePayBanks");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstatePayEstate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateAcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstateProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberAcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RenovationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEstatePayEstates");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstatePayPatent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateAcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstateProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberAcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RenovationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEstatePayPatents");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EstateId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblEstateProjects");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateProjectAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AmountCash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmountEstate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmountPatent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateAgreement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberAgreement")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEstateProjectAgreements");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateProjectEstimate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstateProjectId")
                        .HasColumnType("int");

                    b.Property<string>("KindEstimateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstateProjectId");

                    b.ToTable("TblEstateProjectEstimates");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateProjectEstimateDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstateProjectEstimateId")
                        .HasColumnType("int");

                    b.Property<string>("LawDetailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEstateProjectEstimateDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateRegistry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("KindId")
                        .HasColumnType("tinyint");

                    b.Property<string>("NumberRegistry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectEstateId")
                        .HasColumnType("int");

                    b.Property<string>("RegistryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEstateRegistries");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateUse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblEstateUses");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblFileDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("FileDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblGroup", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("IdKind")
                        .HasColumnType("int");

                    b.Property<int?>("IdRecognition")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblGroups");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblIncome", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<long?>("MablaghKol")
                        .HasColumnType("bigint");

                    b.Property<int?>("SanadMd")
                        .HasColumnType("int");

                    b.Property<string>("SdateSodoor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShSerialFish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShenaseGhabz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SimakMalekName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblIncomes");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblIncomeDetail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<long?>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("CodingSemakId")
                        .HasColumnType("int");

                    b.Property<string>("IdKol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdMoien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdTafsily4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdTafsily5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncomeId")
                        .HasColumnType("int");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblIncomeDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblInsuranceCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("TblInsuranceCompanies");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblKind", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblKinds");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblKol", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdGroup")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblKols");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblMoien", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdKol")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblMoiens");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("MotherId")
                        .HasColumnType("int");

                    b.Property<string>("OrgCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("MotherId");

                    b.ToTable("TblOrganizations");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblPay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PureAmount")
                        .HasColumnType("bigint");

                    b.Property<int?>("SuppliersId")
                        .HasColumnType("int");

                    b.Property<string>("SuppliersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("YearId");

                    b.ToTable("TblPays");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("AreaId1")
                        .HasColumnType("int");

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date1")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentKindId")
                        .HasColumnType("int");

                    b.Property<long?>("PureAmount")
                        .HasColumnType("bigint");

                    b.Property<int?>("SuppliersId")
                        .HasColumnType("int");

                    b.Property<string>("SuppliersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.Property<int?>("YearId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("YearId");

                    b.ToTable("TblPayments");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblPaymentAcceptor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Accept")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSend")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("TblPaymentAcceptors");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblPaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestContractId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("TblPaymentDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("License")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblPermissions");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProctorNameShort")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblProctors");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProgramName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblPrograms");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProgramOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TblAreaId")
                        .HasColumnType("int");

                    b.Property<int?>("TblProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TblAreaId");

                    b.HasIndex("TblProgramId");

                    b.ToTable("TblProgramOperations");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProgramOperationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TblProgramOperationId")
                        .HasColumnType("int");

                    b.Property<int?>("TblProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TblProgramOperationId");

                    b.HasIndex("TblProjectId");

                    b.ToTable("TblProgramOperationDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaArray")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("AreaList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MotherId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectScaleId")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MotherId");

                    b.HasIndex("ProjectScaleId");

                    b.ToTable("TblProjects");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProjectScale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProjectScaleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblProjectScales");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRangBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EndNumber")
                        .HasColumnType("bigint");

                    b.Property<long?>("FromNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TblRangBudgets");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRecognition", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblRecognitions");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("BodgetDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodgetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoingMethodId")
                        .HasColumnType("int");

                    b.Property<string>("Employee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EstimateAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("RequestKindId")
                        .HasColumnType("tinyint");

                    b.Property<string>("ResonDoingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sal")
                        .HasColumnType("int");

                    b.Property<int?>("SuppliersId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("DoingMethodId");

                    b.HasIndex("SuppliersId");

                    b.HasIndex("YearId");

                    b.ToTable("TblRequests");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequestAcceptor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Accept")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateAccept")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSend")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Responsibility")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("TblRequestAcceptors");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequestBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("BodgetDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodgetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BudgetDetailProjectAreaId")
                        .HasColumnType("int");

                    b.Property<long?>("RequestBudgetAmount")
                        .HasColumnType("bigint");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<int?>("Sal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BudgetDetailProjectAreaId");

                    b.HasIndex("RequestId");

                    b.ToTable("TblRequestBudgets");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequestSign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TblRequestSigns");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequestTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Price")
                        .HasColumnType("bigint");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Scale")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("TblRequestTables");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblResponsibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ResponsibilityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblResponsibilities");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSalMd", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdSalMdS")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblSalMds");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("SanadKindId")
                        .HasColumnType("int");

                    b.Property<int?>("SanadStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("YearFinancialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SanadKindId");

                    b.HasIndex("SanadStatusId");

                    b.ToTable("TblSanads");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanadDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("Bedehkar")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bestankar")
                        .HasColumnType("bigint");

                    b.Property<int?>("CodingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SanadId")
                        .HasColumnType("int");

                    b.Property<int?>("SuppliersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CodingId");

                    b.HasIndex("SanadId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("TblSanadDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanadDetailMd", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bedehkar")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bestankar")
                        .HasColumnType("bigint");

                    b.Property<string>("CodeVasetSazman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeVasetShahrdari")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdKol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdMoien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdSalSanadMd")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdSanadMd")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdSotooh4")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdSotooh5")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdSotooh6")
                        .HasColumnType("bigint");

                    b.Property<string>("IdTafsily4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdTafsily5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdTafsily6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblSanadDetailMds");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanadKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KindName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblSanadKinds");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanadMd", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<string>("DescSanadMd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdSanadState")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdSanadkind")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SanadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SanadDateS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblSanadMds");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanadState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblSanadStates");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanadStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblSanadStatuses");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblSigns");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSignDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Sample")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SignId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SignId");

                    b.ToTable("TblSignDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("BlackList")
                        .HasColumnType("bit");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EconomicalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstablishmentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirsrtName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalIdco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumberCo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shenase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuppliersCoKindId")
                        .HasColumnType("int");

                    b.Property<int?>("SuppliersKindId")
                        .HasColumnType("int");

                    b.Property<string>("SuppliersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SuppliersCoKindId");

                    b.ToTable("TblSuppliers");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSuppliersCall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuppliersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SuppliersId");

                    b.ToTable("TblSuppliersCalls");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSuppliersCoKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyKindName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblSuppliersCoKinds");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblTafsily", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdSotooh")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdTafsilyGroup")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdTafsilyType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblTafsilies");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVaset", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("CodeVaset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Expense")
                        .HasColumnType("bigint");

                    b.Property<string>("IdTafsily4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdTafsily5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Markhazhazine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTafsily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Supply")
                        .HasColumnType("bigint");

                    b.Property<long?>("Takhsis")
                        .HasColumnType("bigint");

                    b.Property<int>("VasetId")
                        .HasColumnType("int");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.ToTable("TblVasets");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVasetTamin", b =>
                {
                    b.Property<string>("BodgetDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodgetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReqDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RequestPrice")
                        .HasColumnType("bigint");

                    b.Property<string>("RequestRefStr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectionExecutive")
                        .HasColumnType("int");

                    b.Property<int?>("TypeCredit")
                        .HasColumnType("int");

                    b.ToTable("TblVasetTamins");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVasetTarazSazman", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeAcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Expense")
                        .HasColumnType("bigint");

                    b.Property<string>("IdKol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdMoien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdTafsily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.ToTable("TblVasetTarazSazmen");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVasetsBank", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<long?>("Expense")
                        .HasColumnType("bigint");

                    b.Property<string>("IdTafsily4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTafsily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.ToTable("TblVasetsBanks");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssestCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nmber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nmber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nmber3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nmber4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nmber5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nmber6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nmber7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nmber8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pelak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PelakTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblVehicles");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVehiclesDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CalcFuelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Card")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KindId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceFree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceQuota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuotaAllocate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sanad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScaleFuel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VehiclesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehiclesId");

                    b.ToTable("TblVehiclesDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVehiclesKindInsurance", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.HasKey("Id");

                    b.ToTable("TblVehiclesKindInsurances");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVehiclesTransfer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("TblVehiclesTransfers");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVehiclestechnicalDiagnosis", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.HasKey("Id");

                    b.ToTable("TblVehiclestechnicalDiagnoses");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblYears");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.UserInWareHouse_Tbl", b =>
                {
                    b.Property<int>("UserInWareHouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserInWareHouseID"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserIDInWareHouse")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WareHouseID")
                        .HasColumnType("int");

                    b.HasKey("UserInWareHouseID");

                    b.HasIndex("UserID");

                    b.HasIndex("UserIDInWareHouse");

                    b.HasIndex("WareHouseID");

                    b.ToTable("UserInWareHouse_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.FiscalYears_Tbl", b =>
                {
                    b.Property<int>("FiscalYearID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FiscalYearID"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FiscalFlag")
                        .HasColumnType("bit");

                    b.Property<string>("FiscalYearDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FiscalYearID");

                    b.HasIndex("UserID");

                    b.ToTable("FiscalYears_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Inventories_Tbl", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryID"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiscalYearID")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("OperationType")
                        .HasColumnType("tinyint");

                    b.Property<int>("ProductCountMain")
                        .HasColumnType("int");

                    b.Property<int>("ProductCountWastage")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("ProductLocationID")
                        .HasColumnType("int");

                    b.Property<int>("RefferenceID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WareHouseID")
                        .HasColumnType("int");

                    b.HasKey("InventoryID");

                    b.HasIndex("FiscalYearID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductLocationID");

                    b.HasIndex("UserID");

                    b.HasIndex("WareHouseID");

                    b.ToTable("Inventories_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.ProductLocations_Tbl", b =>
                {
                    b.Property<int>("ProductLocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductLocationID"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductLocationAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WareHouseID")
                        .HasColumnType("int");

                    b.HasKey("ProductLocationID");

                    b.HasIndex("UserID");

                    b.HasIndex("WareHouseID");

                    b.ToTable("ProductLocations_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.ProductPrices_Tbl", b =>
                {
                    b.Property<int>("ProductPriceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductPriceID"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CoverPrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiscalYearID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("PurchasePrice")
                        .HasColumnType("int");

                    b.Property<int>("SalesPrice")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductPriceID");

                    b.HasIndex("FiscalYearID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("ProductPrices_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Products_Tbl", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CountInPacking")
                        .HasColumnType("int");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IsRefregerator")
                        .HasColumnType("tinyint");

                    b.Property<int>("PackingType")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductWeight")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductID");

                    b.HasIndex("CountryID");

                    b.HasIndex("SupplierID");

                    b.HasIndex("UserID");

                    b.ToTable("Products_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Suppliers_Tbl", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierID");

                    b.HasIndex("UserID");

                    b.ToTable("Suppliers_Tbl");
                });

            modelBuilder.Entity("WareHousingApi.Entities.WareHouses_Tbl", b =>
                {
                    b.Property<int>("WareHouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WareHouseID"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WareHouseAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WareHouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WareHouseTel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WareHouseID");

                    b.HasIndex("UserID");

                    b.ToTable("WareHouses_Tbl");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WareHousingApi.Entities.Countries_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.Customers_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("WareHousingApi.Entities.WareHouses_Tbl", "WareHouses")
                        .WithMany()
                        .HasForeignKey("WareHouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");

                    b.Navigation("WareHouses");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.InvoiceItems_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.Invoices_Tbl", "Invoices")
                        .WithMany()
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.Products_Tbl", "Products")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Invoices");

                    b.Navigation("Products");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.Invoices_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.Customers_Tbl", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.FiscalYears_Tbl", "FiscalYears_Tbl")
                        .WithMany()
                        .HasForeignKey("FiscalYearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("WareHousingApi.Entities.WareHouses_Tbl", "WareHouses")
                        .WithMany()
                        .HasForeignKey("WareHouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("FiscalYears_Tbl");

                    b.Navigation("Users");

                    b.Navigation("WareHouses");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudget", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "TblArea")
                        .WithMany("TblBudgets")
                        .HasForeignKey("TblAreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblYear", "TblYear")
                        .WithMany("TblBudgets")
                        .HasForeignKey("TblYearId");

                    b.Navigation("TblArea");

                    b.Navigation("TblYear");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetail", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblBudget", "Budget")
                        .WithMany("TblBudgetDetails")
                        .HasForeignKey("BudgetId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblCoding", "TblCoding")
                        .WithMany("TblBudgetDetails")
                        .HasForeignKey("TblCodingId");

                    b.Navigation("Budget");

                    b.Navigation("TblCoding");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailEdit", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblBudgetDetail", "BudgetDetail")
                        .WithMany("TblBudgetDetailEdits")
                        .HasForeignKey("BudgetDetailId");

                    b.Navigation("BudgetDetail");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailProject", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblBudgetDetail", "BudgetDetail")
                        .WithMany("TblBudgetDetailProjects")
                        .HasForeignKey("BudgetDetailId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblProgramOperationDetail", "ProgramOperationDetails")
                        .WithMany("TblBudgetDetailProjects")
                        .HasForeignKey("ProgramOperationDetailsId");

                    b.Navigation("BudgetDetail");

                    b.Navigation("ProgramOperationDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailProjectArea", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "Area")
                        .WithMany("TblBudgetDetailProjectAreas")
                        .HasForeignKey("AreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblBudgetDetailProject", "BudgetDetailProject")
                        .WithMany("TblBudgetDetailProjectAreas")
                        .HasForeignKey("BudgetDetailProjectId");

                    b.Navigation("Area");

                    b.Navigation("BudgetDetailProject");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailProjectAreaDepartment", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblBudgetDetailProjectArea", "BudgetDetailProjectArea")
                        .WithMany("TblBudgetDetailProjectAreaDepartments")
                        .HasForeignKey("BudgetDetailProjectAreaId");

                    b.Navigation("BudgetDetailProjectArea");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailProjectAreaEdit12345678910", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblBudgetDetailProjectArea", "BudgetDetailProjectArea")
                        .WithMany("TblBudgetDetailProjectAreaEdit12345678910s")
                        .HasForeignKey("BudgetDetailProjectAreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblEditStatus", "EditStatus")
                        .WithMany("TblBudgetDetailProjectAreaEdit12345678910s")
                        .HasForeignKey("EditStatusId");

                    b.Navigation("BudgetDetailProjectArea");

                    b.Navigation("EditStatus");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetPerformanceAccept", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblYear", "Year")
                        .WithMany("TblBudgetPerformanceAccepts")
                        .HasForeignKey("YearId");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetPerformanceAcceptDetail", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "Area")
                        .WithMany("TblBudgetPerformanceAcceptDetails")
                        .HasForeignKey("AreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblBudgetPerformanceAccept", "BudgetPerformanceAccept")
                        .WithMany("TblBudgetPerformanceAcceptDetails")
                        .HasForeignKey("BudgetPerformanceAcceptId");

                    b.Navigation("Area");

                    b.Navigation("BudgetPerformanceAccept");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCoding", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblCodingKind", "CodingKind")
                        .WithMany("TblCodings")
                        .HasForeignKey("CodingKindId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblCodingNature", "CodingNature")
                        .WithMany("TblCodings")
                        .HasForeignKey("CodingNatureId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblCodingPbb", "CodingPbb")
                        .WithMany("TblCodings")
                        .HasForeignKey("CodingPbbid");

                    b.HasOne("WareHousingApi.Entities.Entities.TblCoding", "Mother")
                        .WithMany("InverseMother")
                        .HasForeignKey("MotherId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblProctor", "Proctor")
                        .WithMany("TblCodings")
                        .HasForeignKey("ProctorId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblCodingSubject", "Subject")
                        .WithMany("TblCodings")
                        .HasForeignKey("SubjectId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblBudgetProcess", "TblBudgetProcess")
                        .WithMany("TblCodings")
                        .HasForeignKey("TblBudgetProcessId");

                    b.Navigation("CodingKind");

                    b.Navigation("CodingNature");

                    b.Navigation("CodingPbb");

                    b.Navigation("Mother");

                    b.Navigation("Proctor");

                    b.Navigation("Subject");

                    b.Navigation("TblBudgetProcess");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingPbb", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblCodingPbb", "Mother")
                        .WithMany("InverseMother")
                        .HasForeignKey("MotherId");

                    b.Navigation("Mother");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingsMapSazman", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblCoding", "Coding")
                        .WithMany("TblCodingsMapSazmen")
                        .HasForeignKey("CodingId");

                    b.Navigation("Coding");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommite", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblCommiteKind", "CommiteKind")
                        .WithMany("TblCommites")
                        .HasForeignKey("CommiteKindId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblYear", "Year")
                        .WithMany("TblCommites")
                        .HasForeignKey("YearId");

                    b.Navigation("CommiteKind");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteDetail", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblCommite", "Commite")
                        .WithMany("TblCommiteDetails")
                        .HasForeignKey("CommiteId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblProject", "Project")
                        .WithMany("TblCommiteDetails")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Commite");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteDetailAccept", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblCommiteDetail", "CommiteDetail")
                        .WithMany("TblCommiteDetailAccepts")
                        .HasForeignKey("CommiteDetailId");

                    b.Navigation("CommiteDetail");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteDetailEstimate", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblCommiteDetail", "CommiteDetail")
                        .WithMany("TblCommiteDetailEstimates")
                        .HasForeignKey("CommiteDetailId");

                    b.Navigation("CommiteDetail");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteDetailWb", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblCommiteDetail", "CommiteDetail")
                        .WithMany("TblCommiteDetailWbs")
                        .HasForeignKey("CommiteDetailId");

                    b.Navigation("CommiteDetail");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblContract", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblSupplier", "Suppliers")
                        .WithMany("TblContracts")
                        .HasForeignKey("SuppliersId");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblContractArea", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "Area")
                        .WithMany("TblContractAreas")
                        .HasForeignKey("AreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblContract", "Contract")
                        .WithMany("TblContractAreas")
                        .HasForeignKey("ContractId");

                    b.Navigation("Area");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblContractRequest", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblContract", "Contract")
                        .WithMany("TblContractRequests")
                        .HasForeignKey("ContractId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblRequest", "Request")
                        .WithMany("TblContractRequests")
                        .HasForeignKey("RequestId");

                    b.Navigation("Contract");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblDepartman", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "Area")
                        .WithMany("TblDepartmen")
                        .HasForeignKey("AreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblDepartman", "Mother")
                        .WithMany("InverseMother")
                        .HasForeignKey("MotherId");

                    b.Navigation("Area");

                    b.Navigation("Mother");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblDepartmentAcceptor", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "Area")
                        .WithMany("TblDepartmentAcceptors")
                        .HasForeignKey("AreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblDepartman", "Departman")
                        .WithMany("TblDepartmentAcceptors")
                        .HasForeignKey("DepartmanId");

                    b.Navigation("Area");

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblDepartmentAcceptorUser", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblDepartmentAcceptor", "DepartmanAcceptor")
                        .WithMany("TblDepartmentAcceptorUsers")
                        .HasForeignKey("DepartmanAcceptorId");

                    b.Navigation("DepartmanAcceptor");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateProjectEstimate", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblEstateProject", "EstateProject")
                        .WithMany("TblEstateProjectEstimates")
                        .HasForeignKey("EstateProjectId");

                    b.Navigation("EstateProject");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblFileDetail", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblProject", "TblProject")
                        .WithMany("FileDetails")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblProject");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblOrganization", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "Area")
                        .WithMany("TblOrganizations")
                        .HasForeignKey("AreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblOrganization", "Mother")
                        .WithMany("InverseMother")
                        .HasForeignKey("MotherId");

                    b.Navigation("Area");

                    b.Navigation("Mother");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblPay", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "Area")
                        .WithMany("TblPays")
                        .HasForeignKey("AreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblYear", "Year")
                        .WithMany("TblPays")
                        .HasForeignKey("YearId");

                    b.Navigation("Area");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblPayment", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "Area")
                        .WithMany("TblPayments")
                        .HasForeignKey("AreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblYear", "Year")
                        .WithMany("TblPayments")
                        .HasForeignKey("YearId");

                    b.Navigation("Area");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblPaymentAcceptor", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblPayment", "Payment")
                        .WithMany("TblPaymentAcceptors")
                        .HasForeignKey("PaymentId");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblPaymentDetail", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblPayment", "Payment")
                        .WithMany("TblPaymentDetails")
                        .HasForeignKey("PaymentId");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProgramOperation", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "TblArea")
                        .WithMany("TblProgramOperations")
                        .HasForeignKey("TblAreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblProgram", "TblProgram")
                        .WithMany("TblProgramOperations")
                        .HasForeignKey("TblProgramId");

                    b.Navigation("TblArea");

                    b.Navigation("TblProgram");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProgramOperationDetail", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblProgramOperation", "TblProgramOperation")
                        .WithMany("TblProgramOperationDetails")
                        .HasForeignKey("TblProgramOperationId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblProject", "TblProject")
                        .WithMany("TblProgramOperationDetails")
                        .HasForeignKey("TblProjectId");

                    b.Navigation("TblProgramOperation");

                    b.Navigation("TblProject");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProject", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblProject", "Mother")
                        .WithMany("InverseMother")
                        .HasForeignKey("MotherId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblProjectScale", "ProjectScale")
                        .WithMany("TblProjects")
                        .HasForeignKey("ProjectScaleId");

                    b.Navigation("Mother");

                    b.Navigation("ProjectScale");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequest", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "Area")
                        .WithMany("TblRequests")
                        .HasForeignKey("AreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblDoingMethod", "DoingMethod")
                        .WithMany("TblRequests")
                        .HasForeignKey("DoingMethodId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblSupplier", "Suppliers")
                        .WithMany("TblRequests")
                        .HasForeignKey("SuppliersId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblYear", "Year")
                        .WithMany("TblRequests")
                        .HasForeignKey("YearId");

                    b.Navigation("Area");

                    b.Navigation("DoingMethod");

                    b.Navigation("Suppliers");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequestAcceptor", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblRequest", "Request")
                        .WithMany("TblRequestAcceptors")
                        .HasForeignKey("RequestId");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequestBudget", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblBudgetDetailProjectArea", "BudgetDetailProjectArea")
                        .WithMany("TblRequestBudgets")
                        .HasForeignKey("BudgetDetailProjectAreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblRequest", "Request")
                        .WithMany("TblRequestBudgets")
                        .HasForeignKey("RequestId");

                    b.Navigation("BudgetDetailProjectArea");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequestSign", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblArea", "Area")
                        .WithMany("TblRequestSigns")
                        .HasForeignKey("AreaId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblDepartman", "Department")
                        .WithMany("TblRequestSigns")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Area");

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequestTable", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblRequest", "Request")
                        .WithMany("TblRequestTables")
                        .HasForeignKey("RequestId");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanad", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblSanadKind", "SanadKind")
                        .WithMany("TblSanads")
                        .HasForeignKey("SanadKindId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblSanadStatus", "SanadStatus")
                        .WithMany("TblSanads")
                        .HasForeignKey("SanadStatusId");

                    b.Navigation("SanadKind");

                    b.Navigation("SanadStatus");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanadDetail", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblCoding", "Coding")
                        .WithMany("TblSanadDetails")
                        .HasForeignKey("CodingId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblSanad", "Sanad")
                        .WithMany("TblSanadDetails")
                        .HasForeignKey("SanadId");

                    b.HasOne("WareHousingApi.Entities.Entities.TblSupplier", "Suppliers")
                        .WithMany("TblSanadDetails")
                        .HasForeignKey("SuppliersId");

                    b.Navigation("Coding");

                    b.Navigation("Sanad");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSignDetail", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblSign", "Sign")
                        .WithMany("TblSignDetails")
                        .HasForeignKey("SignId");

                    b.Navigation("Sign");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSupplier", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblSuppliersCoKind", "SuppliersCoKind")
                        .WithMany("TblSuppliers")
                        .HasForeignKey("SuppliersCoKindId");

                    b.Navigation("SuppliersCoKind");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSuppliersCall", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblSupplier", "Suppliers")
                        .WithMany("TblSuppliersCalls")
                        .HasForeignKey("SuppliersId");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVehiclesDetail", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Entities.TblVehicle", "Vehicles")
                        .WithMany("TblVehiclesDetails")
                        .HasForeignKey("VehiclesId");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.UserInWareHouse_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users_WareHouse")
                        .WithMany()
                        .HasForeignKey("UserIDInWareHouse");

                    b.HasOne("WareHousingApi.Entities.WareHouses_Tbl", "WareHouse")
                        .WithMany()
                        .HasForeignKey("WareHouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");

                    b.Navigation("Users_WareHouse");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("WareHousingApi.Entities.FiscalYears_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Inventories_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.FiscalYears_Tbl", "FiscalYear")
                        .WithMany()
                        .HasForeignKey("FiscalYearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.Products_Tbl", "Products")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.ProductLocations_Tbl", "ProductLocations_Tbl")
                        .WithMany()
                        .HasForeignKey("ProductLocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("WareHousingApi.Entities.WareHouses_Tbl", "WareHouse")
                        .WithMany()
                        .HasForeignKey("WareHouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FiscalYear");

                    b.Navigation("ProductLocations_Tbl");

                    b.Navigation("Products");

                    b.Navigation("Users");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("WareHousingApi.Entities.ProductLocations_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("WareHousingApi.Entities.WareHouses_Tbl", "WareHouse")
                        .WithMany()
                        .HasForeignKey("WareHouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("WareHousingApi.Entities.ProductPrices_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.FiscalYears_Tbl", "FiscalYear")
                        .WithMany()
                        .HasForeignKey("FiscalYearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.Products_Tbl", "Products")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("FiscalYear");

                    b.Navigation("Products");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Products_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.Countries_Tbl", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.Suppliers_Tbl", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Country");

                    b.Navigation("Supplier");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Suppliers_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WareHousingApi.Entities.WareHouses_Tbl", b =>
                {
                    b.HasOne("WareHousingApi.Entities.ApplicationUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblArea", b =>
                {
                    b.Navigation("TblBudgetDetailProjectAreas");

                    b.Navigation("TblBudgetPerformanceAcceptDetails");

                    b.Navigation("TblBudgets");

                    b.Navigation("TblContractAreas");

                    b.Navigation("TblDepartmen");

                    b.Navigation("TblDepartmentAcceptors");

                    b.Navigation("TblOrganizations");

                    b.Navigation("TblPayments");

                    b.Navigation("TblPays");

                    b.Navigation("TblProgramOperations");

                    b.Navigation("TblRequestSigns");

                    b.Navigation("TblRequests");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudget", b =>
                {
                    b.Navigation("TblBudgetDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetail", b =>
                {
                    b.Navigation("TblBudgetDetailEdits");

                    b.Navigation("TblBudgetDetailProjects");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailProject", b =>
                {
                    b.Navigation("TblBudgetDetailProjectAreas");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetDetailProjectArea", b =>
                {
                    b.Navigation("TblBudgetDetailProjectAreaDepartments");

                    b.Navigation("TblBudgetDetailProjectAreaEdit12345678910s");

                    b.Navigation("TblRequestBudgets");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetPerformanceAccept", b =>
                {
                    b.Navigation("TblBudgetPerformanceAcceptDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblBudgetProcess", b =>
                {
                    b.Navigation("TblCodings");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCoding", b =>
                {
                    b.Navigation("InverseMother");

                    b.Navigation("TblBudgetDetails");

                    b.Navigation("TblCodingsMapSazmen");

                    b.Navigation("TblSanadDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingKind", b =>
                {
                    b.Navigation("TblCodings");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingNature", b =>
                {
                    b.Navigation("TblCodings");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingPbb", b =>
                {
                    b.Navigation("InverseMother");

                    b.Navigation("TblCodings");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCodingSubject", b =>
                {
                    b.Navigation("TblCodings");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommite", b =>
                {
                    b.Navigation("TblCommiteDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteDetail", b =>
                {
                    b.Navigation("TblCommiteDetailAccepts");

                    b.Navigation("TblCommiteDetailEstimates");

                    b.Navigation("TblCommiteDetailWbs");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblCommiteKind", b =>
                {
                    b.Navigation("TblCommites");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblContract", b =>
                {
                    b.Navigation("TblContractAreas");

                    b.Navigation("TblContractRequests");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblDepartman", b =>
                {
                    b.Navigation("InverseMother");

                    b.Navigation("TblDepartmentAcceptors");

                    b.Navigation("TblRequestSigns");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblDepartmentAcceptor", b =>
                {
                    b.Navigation("TblDepartmentAcceptorUsers");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblDoingMethod", b =>
                {
                    b.Navigation("TblRequests");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEditStatus", b =>
                {
                    b.Navigation("TblBudgetDetailProjectAreaEdit12345678910s");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblEstateProject", b =>
                {
                    b.Navigation("TblEstateProjectEstimates");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblOrganization", b =>
                {
                    b.Navigation("InverseMother");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblPayment", b =>
                {
                    b.Navigation("TblPaymentAcceptors");

                    b.Navigation("TblPaymentDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProctor", b =>
                {
                    b.Navigation("TblCodings");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProgram", b =>
                {
                    b.Navigation("TblProgramOperations");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProgramOperation", b =>
                {
                    b.Navigation("TblProgramOperationDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProgramOperationDetail", b =>
                {
                    b.Navigation("TblBudgetDetailProjects");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProject", b =>
                {
                    b.Navigation("FileDetails");

                    b.Navigation("InverseMother");

                    b.Navigation("TblCommiteDetails");

                    b.Navigation("TblProgramOperationDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblProjectScale", b =>
                {
                    b.Navigation("TblProjects");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblRequest", b =>
                {
                    b.Navigation("TblContractRequests");

                    b.Navigation("TblRequestAcceptors");

                    b.Navigation("TblRequestBudgets");

                    b.Navigation("TblRequestTables");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanad", b =>
                {
                    b.Navigation("TblSanadDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanadKind", b =>
                {
                    b.Navigation("TblSanads");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSanadStatus", b =>
                {
                    b.Navigation("TblSanads");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSign", b =>
                {
                    b.Navigation("TblSignDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSupplier", b =>
                {
                    b.Navigation("TblContracts");

                    b.Navigation("TblRequests");

                    b.Navigation("TblSanadDetails");

                    b.Navigation("TblSuppliersCalls");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblSuppliersCoKind", b =>
                {
                    b.Navigation("TblSuppliers");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblVehicle", b =>
                {
                    b.Navigation("TblVehiclesDetails");
                });

            modelBuilder.Entity("WareHousingApi.Entities.Entities.TblYear", b =>
                {
                    b.Navigation("TblBudgetPerformanceAccepts");

                    b.Navigation("TblBudgets");

                    b.Navigation("TblCommites");

                    b.Navigation("TblPayments");

                    b.Navigation("TblPays");

                    b.Navigation("TblRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
